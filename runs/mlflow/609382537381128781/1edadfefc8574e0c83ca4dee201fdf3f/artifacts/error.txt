Failure # 1 (occurred at 2024-12-01_17-46-21)
[36mray::_Inner.train()[39m (pid=84732, ip=172.26.204.107, actor_id=0cd8c4cc5a0645fc9862fea801000000, repr=TorchTrainer)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/fahad/study/kserving/.venv/lib/python3.12/site-packages/ray/tune/trainable/trainable.py", line 331, in train
    raise skipped from exception_cause(skipped)
  File "/home/fahad/study/kserving/.venv/lib/python3.12/site-packages/ray/train/_internal/utils.py", line 57, in check_for_failure
    ray.get(object_ref)
           ^^^^^^^^^^^^^^^^^^^
           ^^^^^^^^^^^^^^^^^^^^^
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ray.exceptions.OutOfMemoryError: Task was killed due to the node running low on memory.
Memory on the node (IP: 172.26.204.107, ID: 6bd78c8272da8ab17144a6de41d9566a9f667b542c3b82d5d973a5c1) where the task (actor ID: 99c4568dcf3ed465f212731801000000, name=RayTrainWorker.__init__, pid=84912, memory used=2.97GB) was running was 7.53GB / 7.62GB (0.987842), which exceeds the memory usage threshold of 0.95. Ray killed this worker (ID: 0b0f71216a49d8a15e387b4efe840b0c84a97a5de8649d6fe23fa89d) because it was the most recently scheduled task; to see more information about memory usage on this node, use `ray logs raylet.out -ip 172.26.204.107`. To see the logs of the worker, use `ray logs worker-0b0f71216a49d8a15e387b4efe840b0c84a97a5de8649d6fe23fa89d*out -ip 172.26.204.107. Top 10 memory users:
PID	MEM(GB)	COMMAND
84912	2.97	ray::_RayTrainWorker__execute.get_next
84732	0.40	ray::_Inner.train
75437	0.38	/home/fahad/study/kserving/.venv/bin/python3 /home/fahad/study/kserving/.venv/lib/python3.12/site-pa...
75269	0.25	python3 model/train.py
75363	0.19	/home/fahad/study/kserving/.venv/lib/python3.12/site-packages/ray/core/src/ray/gcs/gcs_server --log_...
75531	0.17	/home/fahad/study/kserving/.venv/lib/python3.12/site-packages/ray/core/src/ray/raylet/raylet --rayle...
75532	0.10	/home/fahad/study/kserving/.venv/bin/python3 -u /home/fahad/study/kserving/.venv/lib/python3.12/site...
80084	0.09	ray::IDLE_SpillWorker
75613	0.09	ray::_StatsActor
75587	0.08	/home/fahad/study/kserving/.venv/bin/python3 -u /home/fahad/study/kserving/.venv/lib/python3.12/site...
Refer to the documentation on how to address the out of memory issue: https://docs.ray.io/en/latest/ray-core/scheduling/ray-oom-prevention.html. Consider provisioning more memory on this node or reducing task parallelism by requesting more CPUs per task. Set max_restarts and max_task_retries to enable retry when the task crashes due to OOM. To adjust the kill threshold, set the environment variable `RAY_memory_usage_threshold` when starting Ray. To disable worker killing, set the environment variable `RAY_memory_monitor_refresh_ms` to zero.
